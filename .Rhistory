x[x>0]
x[!is.na(x)&x>0]
c(x)
x[c(3rd,5rd,7rd)]
x
x[c(3,5,7)]
x[0]
x[c(3000)]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
Vect
vect
names(vect)
vect2<-c(11,2,NA)
vect2<-c("foo","bar","norf")
names(vect2)<-c("foo","bar","norf")
identical(vect==vect2)
identical(vect y vect2)
?identical
identical(vect , vect2)
vect["bar"]
vect[c("foo","bar")]
bye()
cars
class(cars)
row(cars)
q()
Z<-0:9
z<-0:9
rm(Z)
digitos<-as.character(z)
d<-as.integer(digitos)
alfa<-c(1:10)
alfa<-alfa[2*1:5]
attributes(z)
attributes(digitos)
attributes(alfa)
attributes(d)
attr(z,"dim")<-c(10,10)
attr(y,"dim")<-c(10,10)
attr(z,"dim") <- c(10,10)
library(swirl)
swirl()
my_vector<-c(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vectro
my_matrix<-my_vector
?matrix()
my_matrix<-matrix(1:20,nrow = 4,ncol = 5)
?matrix
my_matrix2<-matrix()
skip()
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","kelly","Sean")
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients)
cbind(patients,my_matrix2)
cbind(patients,my_matrix)
my_data<-data(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data,cnames)
colnames(cnames)
colnames(my_data)<-cnames
colnames()
colnames(my_data)
my_data
q
q()
library(swirl)
ls()
rm(ls())
rm(list=ls())
swirl()
T==T
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
!(5==7)
Q()
q()
cars
cars[,2]
mean(cars[,2])
mean(cars)
?which
which(dist==85)
which(row,dist==85)
which(row=85,dist=TRUE)
which(row,dist=85)
which(dist=85)
which(cars$dist==85)
?loop
?for
?Control
q()
library(swirl)
swirl()
FALSE&FALSE
TRUE&C(TRUE,FALSE,FALSE)
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
bye()
q()
View(my_data)
View(my_matrix)
View(my_matrix2)
View(my_vector)
list(x)
lm(list(x))
lm(x)
rm(x)
rm(all())
demo(graphics)
q()
library()
require(MASS)
data()
data("iris")
length(iris)
names(iris)
head(iris)
tail(iris)
str(iris)
ls()
class(iris)
class(iris$Species)
iris
ls()
names(iris)
iris$Petal.Width=iris$Petal.Width2
names(iris)
data("iris")
data(iris)
labels(iris)
?labels
¿labels()
?labels()
summary(iris)
factor(iris$Species)
ordered(iris$Sepal.Length)
iris$Species<-factor(iris$Species,levels = c("setosa","versicolor","virginiana"),labels = c("red","blue","violet"))
iris$Species<-factor(iris$Species,levels = c("setosa","versicolor","virginica"),labels = c("red","blue","violet"))
iris$Species
rm(iris$Species)
iris$Species <- factor(iris$Species,levels = c("setosa","versicolor","virginica"),labels=c("red","blue","violet"))
iris$Species
a<-c(2,3,5,4)
b<-c("aa","bb","cc",NA)
s<-c(TRUE,FALSE,TRUE,FALSE)
df<-data.frame(a,b,s)
df
table(is.na(df))
df[complete.cases(df),]
df[complete.cases(df)]
df[complete.cases(df),]
dfnew<-na.omit(df)
dfnew
?quadratic
q()
getwd()
swirl()
library(swirl)
ls()
swirl()
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555)
c(z,55,z)
c(z,555,z)
z*2+100
q()
seq(2,20,2)
rep(2,10)
coef(a,b,c)
?coef
q()
x<-c(12,15,13,20,14,16,10,10,8,15)
hist(x)
x<-seq(1,10)
y<-x^2-10*x
plot(x,y)
curve
curve(x,y)
curve(x)
curve(expr = sin,from = o,to=6*3.14)
curve(expr = sin,from = o,to=6pi)
curve(expr = sin,from =0,to=6pi)
curve(expr = sin,from =0,to=6*pi)
solar.radiation<-c(11.1,10.6,6.3,8.8,10.7,11.2,8.9,12.2)
mean(solar.radiation)
median(solar.radiation)
var(solar.radiation)
sr10<-solar.radiation+10
sr10
mean(sr10)
median(sr10)
var(sr10)
srm2<-sr10-2
mean(srm2)
median(srm2)
var(srm2)
plot(solar.radiation)
plot(sr10)
plot(srm2)
?var()
help("var")
help("sample")
x<-[-20,20]
x<-[-20:20]
x<--20:20
x
sample(x,size = 3,replace = TRUE)
coef(a,b,c)
q()
q()
student<-read.table(/Users/saidbouatra/Downloads/LAB1/DATA/student-mat.csv",
header=TRUE, sep=";", na.strings="NA", dec=".", strip.white=TRUE)
student<-read.table(/Users/saidbouatra/Downloads/LAB1/DATA/student-mat.csv,
header=TRUE, sep=";", na.strings="NA", dec=".", strip.white=TRUE)
student<-read.table("/Users/saidbouatra/Downloads/LAB1/DATA/student-mat.csv",
header=TRUE, sep=";", na.strings="NA", dec=".", strip.white=TRUE)
data.frame(student)
length(student)
names(student)
class(student)
class(student$romantic)
class(student$age)
table(is.na(student))
source('~/Desktop/LAB2_EXE3.R')
library(readr)
student_mat <- read_csv("~/Desktop/Software para el analisis de datos/LAB1/DATA/student-mat.csv")
View(student_mat)
library(readr)
student_mat <- read_csv("~/Desktop/Software para el analisis de datos/LAB1/DATA/student-mat.csv")
View(student_mat)
q()
LS()
ls()
rm(ls())
rm()
ls()
?rm()
rm(list=ls())
library(readr)
LAB2_EXE3 <- read_csv("~/Desktop/LAB2_EXE3.R")
View(LAB2_EXE3)
data.frame(students)
students <- read.table(/Users/saidbouatra/statistical software/Materials-LABs/LAB1/DATA/student-mat.csv,header=TRUE,sep=";",na.strings=NA,dec=".",strip.white=TRUE)
students <- read.table(/Users/saidbouatra/statistical software/Materials-LABs/LAB1/DATA/student-mat.csv,header=TRUE,sep=";",na.strings=NA,dec=".",strip.white=TRUE)
students <- read.table(//Users/saidbouatra//statistical software//Materials-LABs//LAB1/DATA/student-mat.csv,header=TRUE,sep=";",na.strings=NA,dec=".",strip.white=TRUE)
View(LAB2_EXE3)
data.frame(students)
students <- read.table(/Users/saidbouatra/statistical software/Materials-LABs/LAB1/DATA/student-mat.csv,header=TRUE,sep=";",na.strings=NA,dec=".",strip.white=TRUE)
students <- read.table(/Users/saidbouatra/statistical software/Materials-LABs/LAB1/DATA/student-mat.csv,header=TRUE,sep=";",na.strings=NA,dec=".",strip.white=TRUE)
students <- read.table(/Users/saidbouatra/statistical software/Materials-LABs/LAB1/DATA/student-mat.csv,header=TRUE,sep=";",na.strings=NA,dec=".",strip.white=TRUE)
students <- read.table("/Users/saidbouatra/statistical software/Materials-LABs/LAB1/DATA/student-mat.csv",header=TRUE,sep=";",na.strings=NA,dec=".",strip.white=TRUE)
students <- read.table("/Users/saidbouatra/statistical software/Materials-LABs/LAB1/DATA/student-mat.csv",header=TRUE,sep=";",na.strings=NA,dec=".",strip.white=TRUE)
data.frame(students)
length(students)
names(students)
class(students)
class(students$romantic)
class(students$age)
table(is.na(students))
students <- read.table("/Users/saidbouatra/statistical software/Materials-LABs/LAB1/DATA/student-mat.csv",header=TRUE,sep=";",na.strings=NA,dec=".",strip.white=TRUE)
data.frame(students)
length(students)
names(students)
class(students)
class(students$romantic)
class(students$age)
table(is.na(students))
source('~/Desktop/Said-LAB1.R')
table(is.na(students))
write.table(mydata, “c:/mydata.txt”, sep=“”)
write.table(said-LAB1,'students')
write.table(student.txt,'students')
write.table(students,file = 'said-LAB1')
getwd()
q()
q()
summary(stressEchoDataSet)
stressEchoMaleData<- read.csv("/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.csv",header = TRUE,dec = ",")
stressEchoFemaleData<- read.csv("/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoFem.csv",header = TRUE,dec = ",")
attach(stressEchoMaleData)
attach(stressEchoFemaleData)
detach(stressEchoFemaleData)
detach(stressEchoMaleData)
head(stressEchoMaleData)
head(stressEchoFemaleData)
tail(stressEchoFemaleData)
tail(stressEchoMaleData)
stressEchoDataSet<-merge(stressEchoMaleData,stressEchoFemaleData,all = TRUE)
stressEchoDataSet
names(stressEchoDataSet)
summary(stressEchoDataSet)
hist(stressEchoDataSet)
hist(stressEchoDataSet$dose)
hist(stressEchoDataSet$dose,breaks = 100,col = green)
hist(stressEchoDataSet$dose,breaks = 10,col = green)
getwd()
getwd()
read.csv2("/Users/saidbouatra/Downloads/LAB2/DATA",header = TRUE,sep = ";",dec = ",")
read.csv2("/Users/saidbouatra/Downloads/LAB2/DATA",header = TRUE,dec = ",")
read.csv2("/Users/saidbouatra/Downloads/LAB2/DATA/datagraphs.csv.csv",header = TRUE,dec = ",")
read.csv2("/Users/saidbouatra/Downloads/LAB2/DATA/datagraphs.csv.csv",header = TRUE,dec = ",",sep = ";")
read.csv2("/Users/saidbouatra/Downloads/LAB2/DATA/datagraphs.csv.csv",header = TRUE,sep = ";")
read.table("/Users/saidbouatra/Downloads/LAB2/DATA/datagraphs.csv.csv",header = TRUE,sep = ";")
read.table("/Users/saidbouatra/Downloads/LAB2/DATA/datagraphs.csv.csv",header = TRUE,sep = ",")
read.csv2("/Users/saidbouatra/Downloads/LAB2/DATA/datagraphs.csv.csv",header = TRUE,sep = ",")
read.table("/Users/saidbouatra/Downloads/LAB2/DATA/datagraphs.csv.csv",header = TRUE,sep = ",",row.names = "id")
("/Users/saidbouatra/Downloads/LAB2/DATA/datagraphs.csv.csv",header = TRUE,sep = ",",row.names = "id")
read.table("/Users/saidbouatra/Downloads/LAB2/DATA/datagraphs.csv.csv",header = TRUE,row.names = "id")
read.table("/Users/saidbouatra/Downloads/LAB2/DATA/datagraphs.csv.csv",header = TRUE,sep = ",")
library(laeken)
install.packages(laeken)
?laeken
??laeken
install.packages("laeken")
library(laeken)
data(eusilc)
sapply(eusilc,mean,na.rm=TRUE)
Summary(eusilc)
summary(eusilc)
fivenum(eusilc$eqIncome)
summary(eusilc$eqIncome)
stressEchoMaleData<- read.csv2("/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.csv",header = TRUE,dec = ",")
print(stressEchoDataSet)
(stressEchoDataSet)
options(max.print = 1000)
data.frame(stressEchoDataSet)
names(stressEchoDataSet)
class(stressEchoDataSet)
head(stressEchoDataSet)
tail(stressEchoFemaleData)
summary(stressEchoDataSet)
table(stressEchoDataSet)
write.table(stressEchoDataSet,"/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.txt",sep = "")
?sep=""
write.table(stressEchoDataSet,"/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.txt",sep = "")
library(foreign)
write.dta(stressEchoDataSet,"/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.dta")
source('~/Statistical software/said_PEC1.R')
write.dta(stressEchoDataSet,"/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.dta")
##Sección 1. Importación, exportación y unión de datos
## a) Importa los datos del fichero stressEchoMale.csv que corresponde a los hombres y guárdalos en un data frame llamado stressEchoDataMale.
stressEchoMaleData<- read.csv2("/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.csv",header = TRUE,dec = ",")
## b) Especifica cómo cambiarías el directorio donde guardar los ficheros de datos y de código que generas con R-Studio.
## b) Especifica cómo cambiarías el directorio donde guardar los ficheros de datos y de código que generas con R-Studio.
stressEchoFemaleData<- read.csv2("/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoFem.csv",header = TRUE,dec = ",")
## d) Crea un data frame llamado stressEchoDataSet que contenga los datos de stressEchoMaleData y stressEchoFemaleData. ¿Cuáles son los nombres de los campos que contiene la tabla resultante?
stressEchoDataSet<-merge(stressEchoMaleData,stressEchoFemaleData,all = TRUE)
## e) Muestra la información del data frame stressEchoDataSet. De forma predeterminada, se muestran un número determinado de filas.
print(stressEchoDataSet) ## se muestran solamente 90 filas , y se omitieron 468 filas
## ¿cuál sería la instrucción que permite mostrar toda la información de la tabla.
## para modificar el max de filas que se muestran , invocamos a la funcion "options"  para modificar el max de filas .i.e : 1000 filas.
options(max.print = 1000)
## f) Muestra la estructura interna del data frame stressEchoDataSet, es decir, el resumen datos y variables, junto con el formato de cada una de ellas.
names(stressEchoDataSet)
class(stressEchoDataSet)
head(stressEchoDataSet)
tail(stressEchoFemaleData)
names(stressEchoDataSet)
summary(stressEchoDataSet)
## g) Exporta el data frame stressEchoDataSet en un fichero en formato texto. Explica cómo se realizaría a nivel de código y cómo se haría desde R-Commander.
## utilizamos la funcion write.table ( "nombre de data frame", "la ubicacion en el disco duro donde queremos exportar el archivo.txt" , separacion entre los valores de las variables es "white space")
write.table(stressEchoDataSet,"/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.txt",sep = "")
## h) Exporta el data frame stressEchoDataSet en un formato apto para trabajar con STATA (http://www.stata.com)
library(foreign)
write.dta(stressEchoDataSet,"/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.dta")
## Sección 2. Estructura de datos
stressEchoMaleData<- read.csv2("/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.csv",header = TRUE,dec = ",")
stressEchoFemaleData<- read.csv2("/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoFem.csv",header = TRUE,dec = ",")
stressEchoDataSet<-merge(stressEchoMaleData,stressEchoFemaleData,all = TRUE)
print(stressEchoDataSet) ## se muestran solamente 90 filas , y se omitieron 468 filas
options(max.print = 1000)
stressEchoMaleData<- read.csv2("/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.csv",header = TRUE,dec = ",",sep = "")
stressEchoFemaleData<- read.csv2("/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoFem.csv",header = TRUE,dec = ",",sep = "")
stressEchoDataSet<-merge(stressEchoMaleData,stressEchoFemaleData,all = TRUE)
print(stressEchoDataSet) ## se muestran solamente 90 filas , y se omitieron 468 filas
stressEchoMaleData<- read.csv("/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.csv",header = TRUE,dec = ",")
stressEchoFemaleData<- read.csv("/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoFem.csv",header = TRUE,dec = ",")
stressEchoDataSet<-merge(stressEchoMaleData,stressEchoFemaleData,all = TRUE)
print(stressEchoDataSet) ## se muestran solamente 90 filas , y se omitieron 468 filas
n_pacients<-nrow(stressEchoDataSet)
n_pacients
print(n_pacients)
x<-c(stressEchoDataSet¢idpacient)
x<-cbind(stressEchoDataSet¢idpacient)
x<-cbind.data.frame(stressEchoDataSet¢idpacient)
table(stressEchoDataSet¢age)
table("stressEchoDataSet¢age")
age_var<-table("stressEchoDataSet¢age")
age_var
age_var<-c("stressEchoDataSet¢age")
age_var
age_var<-row.names("stressEchoDataSet¢age")
age_var
?distribution
summary("stressEchoDataSet¢age")
##Sección 1. Importación, exportación y unión de datos
## a) Importa los datos del fichero stressEchoMale.csv que corresponde a los hombres y guárdalos en un data frame llamado stressEchoDataMale.
stressEchoMaleData<- read.csv("/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.csv",header = TRUE,dec = ",")
## b) Especifica cómo cambiarías el directorio donde guardar los ficheros de datos y de código que generas con R-Studio.
## b) Especifica cómo cambiarías el directorio donde guardar los ficheros de datos y de código que generas con R-Studio.
stressEchoFemaleData<- read.csv("/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoFem.csv",header = TRUE,dec = ",")
## d) Crea un data frame llamado stressEchoDataSet que contenga los datos de stressEchoMaleData y stressEchoFemaleData. ¿Cuáles son los nombres de los campos que contiene la tabla resultante?
stressEchoDataSet<-merge(stressEchoMaleData,stressEchoFemaleData,all = TRUE)
## e) Muestra la información del data frame stressEchoDataSet. De forma predeterminada, se muestran un número determinado de filas.
print(stressEchoDataSet) ## se muestran solamente 90 filas , y se omitieron 468 filas
## ¿cuál sería la instrucción que permite mostrar toda la información de la tabla.
## para modificar el max de filas que se muestran , invocamos a la funcion "options"  para modificar el max de filas .i.e : 1000 filas.
options(max.print = 1000)
## f) Muestra la estructura interna del data frame stressEchoDataSet, es decir, el resumen datos y variables, junto con el formato de cada una de ellas.
names(stressEchoDataSet)
class(stressEchoDataSet)
head(stressEchoDataSet)
tail(stressEchoFemaleData)
names(stressEchoDataSet)
summary(stressEchoDataSet)
## g) Exporta el data frame stressEchoDataSet en un fichero en formato texto. Explica cómo se realizaría a nivel de código y cómo se haría desde R-Commander.
## utilizamos la funcion write.table ( "nombre de data frame", "la ubicacion en el disco duro donde queremos exportar el archivo.txt" , separacion entre los valores de las variables es "white space")
write.table(stressEchoDataSet,"/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.txt",sep = "")
## h) Exporta el data frame stressEchoDataSet en un formato apto para trabajar con STATA (http://www.stata.com)
library(foreign)
write.dta(stressEchoDataSet,"/Users/saidbouatra/Statistical software/1718S1_SAD_PEC1/DATOS/stressEchoMale.dta")
## Sección 2. Estructura de datos
## Ejercicio 2: Halla el número de pacientes que han realizado el estudio en stressEchoDataSet.
n_pacients<-nrow(stressEchoDataSet)
print(n_pacients)
## Ejercicio 3: Muestra en una tabla, la distribución por la variable age del data frame stressEchoDataSet y la ordenación de estas edades en modo ascendente.
summary("stressEchoDataSet¢age")
summary(stressEchoDataSet$age)
fivenum(stressEchoDataSet$age)
?ordered()
ordered(stressEchoDataSet$age)
factor(stressEchoDataSet$age,ordered = TRUE)
factor(stressEchoDataSet$age,levels ,ordered = TRUE)
factor(stressEchoDataSet$age,levels= TRUE ,ordered = TRUE)
order(stressEchoDataSet$age,decreasing = FALSE)
ordered(stressEchoDataSet$age,levels=26:93)
is.factor(stressEchoDataSet$age)
as.factor(stressEchoDataSet$age)
age
ordered(stressEchoDataSet$age)
stressEchoDataSet$age
order(stressEchoDataSet$age)
tapply(stressEchoDataSet$age)
(stressEchoDataSet ,index= age,FUN = NULL,default = NA, simplify = TRUE)
tapply(stressEchoDataSet$age ,index= age,FUN = NULL,default = NA, simplify = TRUE)
q()
rename("said_PEC1.R","PEC1_BOUATRA_BELOUAFI_SAID.R")
?rename
file.rename("said_PEC1.R","PEC1_BOUATRA_BELOUAFI_SAID.R")
?file.rename()
file.rename(said_PEC1.R,PEC1_BOUATRA_BELOUAFI_SAID.R)
file.rename(said_PEC1.R,PEC1_BOUATRA_BELOUAFI_SAID.R)
file.rename(said_PEC1.R,PEC1_BOUATRA_BELOUAFI_SAID.R)
file.rename("/Users/saidbouatra/Statistical software/said_PEC1.R","/Users/saidbouatra/Statistical software/PEC1_BOUATRA_BELOUAFI_SAID.R")
class(stressEchoDataSet$age)
factor(stressEchoDataSet$age)
sort(stressEchoDataSet$age)
tapply(stressEchoDataSet$age ,index= age,FUN = NULL,default = NA, simplify = TRUE)
(stressEchoDataSet$age)
summary(stressEchoDataSet$age)
summary(stressEchoDataSet$age)
q()
as.factor(stressEchoDataSet$age)
levels(stressEchoDataSet$age)
levels("stressEchoDataSet$age")
ordered(stressEchoDataSet,levels=c(26:93))
ordered(stressEchoDataSet$age,levels=c(26:93))
sort(stressEchoDataSet$age,decreasing = FALSE)
table(stressEchoDataSet$age)
ordered(stressEchoDataSet$age,levels=c("26:93"))
ordered(stressEchoDataSet$age,levels="26:93")
ordered(stressEchoDataSet$age,levels=26:93)
matrix(stressEchoDataSet$age,nrow = 541,ncol = 1,)
matrix(stressEchoDataSet$age,nrow = 558,ncol = 1,)
ordered(matrix(stressEchoDataSet$age,nrow = 100,ncol = 1))
ordered(matrix(stressEchoDataSet$age,nrow = 558,ncol = 1))
sink("PEC1_BOUATRA_BELOUAFI_SAID.pdf")
sink()
sink("PEC1_BOUATRA_BELOUAFI_SAID.pdf")
pdf("PEC1_BOUATRA_BELOUAFI_SAID")
library("foreign")
getwd()
getwd()
setwd("/Users/saidbouatra/Statistical_software/statist_R_dev_git/StatS_P2")
